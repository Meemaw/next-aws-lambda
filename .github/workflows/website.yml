name: website
on: [push]

env:
  CI: true

jobs:
  unit_tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: install, lint and unit test
        run: |
          yarn install --frozen-lockfile
          yarn lint
          yarn test:unit -- --coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  e2e_tests:
    runs-on: ubuntu-latest
    env:
      ARTIFACTS_PATH: artifacts/

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --frozen-lockfile
      - name: build application
        run: yarn build
      - name: start application
        run: |
          mkdir -p $ARTIFACTS_PATH
          yarn start 2>&1 | tee $ARTIFACTS_PATH/serve.log &
          node_modules/wait-on/bin/wait-on http-get://localhost:3000 --timeout 60000
      - name: test:e2e
        run: |
          mkdir -p $ARTIFACTS_PATH/screenshots
          mkdir -p $ARTIFACTS_PATH/videos
          xvfb-run --server-args="-screen 0 1280x720x24" yarn test:e2e
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: artifacts
          path: artifacts

  deploy:
    runs-on: ubuntu-latest
    needs: [unit_tests, e2e_tests]
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install packages
        run: |
          yarn install --frozen-lockfile
      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          WEBSITE_BUCKET: ${{ secrets.WEBSITE_BUCKET }}
        run: |
          yarn deploy
